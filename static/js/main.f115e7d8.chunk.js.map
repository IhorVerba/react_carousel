{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","useState","imagePosition","setImagePosition","endImagePosition","length","isDisabledStart","isDisabledEnd","className","style","width","transition","map","image","index","transform","src","alt","type","onClick","current","disabled","App","state","setState","htmlFor","id","min","max","value","onChange","e","currentState","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f115e7d8.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n}) => {\n  const [imagePosition, setImagePosition] = useState(0);\n\n  const endImagePosition = images.length - frameSize;\n  const isDisabledStart = imagePosition === 0 && !infinite;\n  const isDisabledEnd = imagePosition === endImagePosition && !infinite;\n\n  function handleNext() {\n    if (imagePosition < endImagePosition) {\n      setImagePosition(current => (\n        current + step <= endImagePosition\n          ? current + step\n          : endImagePosition\n      ));\n    } else {\n      setImagePosition(0);\n    }\n  }\n\n  function handlePrev() {\n    if (imagePosition > 0) {\n      setImagePosition(current => (\n        current - step >= 0\n          ? current - step\n          : 0\n      ));\n    } else if (infinite) {\n      setImagePosition(endImagePosition);\n    }\n  }\n\n  return (\n    <div\n      className=\"Carousel\"\n      style={{\n        width: `${frameSize * itemWidth}px`,\n        transition: `${animationDuration}ms`,\n      }}\n    >\n      <ul className=\"Carousel__list\">\n        {images.map((image, index) => (\n          <li\n            key={image}\n            style={{\n              transform: `translateX(${-imagePosition * itemWidth}px)`,\n              transition: `transform ${animationDuration}ms`,\n            }}\n          >\n            <img\n              className=\"Carousel__image\"\n              src={image}\n              alt={`${index + 1}`}\n              width={itemWidth}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"Carousel__buttons\">\n        <button\n          type=\"button\"\n          className=\"Carousel__button\"\n          onClick={handlePrev}\n          disabled={isDisabledStart}\n        >\n          Prev\n        </button>\n\n        <button\n          type=\"button\"\n          data-cy=\"next\"\n          className=\"Carousel__button\"\n          onClick={handleNext}\n          disabled={isDisabledEnd}\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React, { useState } from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\nconst images = [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\n\ninterface State {\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nexport const App: React.FC = () => {\n  const [state, setState] = useState<State>({\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  });\n\n  const {\n    step,\n    frameSize,\n    itemWidth,\n    animationDuration,\n    infinite,\n  } = state;\n\n  function toggleInfinite() {\n    setState((currentState) => ({\n      ...currentState,\n      infinite: !infinite,\n    }));\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 data-cy=\"title\">\n        {`Carousel with ${images.length} images`}\n      </h1>\n\n      <div className=\"App__container\">\n        <label className=\"App__label\" htmlFor=\"itemId\">\n          Item Width:\n          <input\n            className=\"App__input\"\n            type=\"number\"\n            id=\"itemId\"\n            min={50}\n            max={390}\n            step={5}\n            value={itemWidth}\n            onChange={(e) => setState(currentState => ({\n              ...currentState,\n              itemWidth: +e.target.value,\n            }))}\n          />\n        </label>\n\n        <label className=\"App__label\" htmlFor=\"frameId\">\n          Frame Size:\n          <input\n            className=\"App__input\"\n            type=\"number\"\n            id=\"frameId\"\n            min={1}\n            max={images.length}\n            value={frameSize}\n            onChange={(e) => setState(currentState => ({\n              ...currentState,\n              frameSize: +e.target.value,\n            }))}\n          />\n        </label>\n\n        <label className=\"App__label\" htmlFor=\"stepId\">\n          Step:\n          <input\n            className=\"App__input\"\n            type=\"number\"\n            id=\"stepId\"\n            min={1}\n            max={3}\n            step={1}\n            value={step}\n            onChange={(e) => setState(currentState => ({\n              ...currentState,\n              step: +e.target.value,\n            }))}\n          />\n        </label>\n\n        <label className=\"App__label\" htmlFor=\"animationId\">\n          Animation duration:\n          <input\n            className=\"App__input\"\n            type=\"number\"\n            id=\"animationId\"\n            min={500}\n            max={3000}\n            value={animationDuration}\n            onChange={(e) => setState(currentState => ({\n              ...currentState,\n              animationDuration: +e.target.value,\n            }))}\n          />\n        </label>\n\n        <label className=\"App__label\" htmlFor=\"infiniteId\">\n          Infinite:\n          <input\n            className=\"App__input\"\n            type=\"checkbox\"\n            id=\"infiniteId\"\n            onChange={toggleInfinite}\n          />\n        </label>\n      </div>\n\n      <Carousel\n        images={images}\n        step={step}\n        frameSize={frameSize}\n        itemWidth={itemWidth}\n        animationDuration={animationDuration}\n        infinite={infinite}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}